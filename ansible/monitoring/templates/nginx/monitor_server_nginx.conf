worker_processes auto;

events {
	worker_connections 768;
}

http { 
    # Logging
    error_log /var/log/nginx/error.log warn;
    access_log /var/log/nginx/access.log;
    # All requests are redirected to HTTPS
    server {
        listen 80 default_server;
        server_name monitoring.de-marauder.me;
        return 301 https://$host$request_uri;
    }
    # Grafana
    server {
        listen       80;
        server_name grafana.monitoring.de-marauder.me;
            # ssl_certificate      /etc/nginx/certificate.pem;
            # ssl_certificate_key  /etc/nginx/certificate.key;
            # ssl_session_cache    shared:SSL:1m;
            # ssl_session_timeout  5m;
            # ssl_protocols        TLSv1.3;
            # ssl_prefer_server_ciphers   on;
        location / {
            # set $upstream localhost;
            # nginx will now start if host is not reachable
            # fastcgi_pass    $upstream; 
            # fastcgi_index   index.php;
            # resolver 127.0.0.1 valid=30s;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            # proxy_pass http://localhost;
        }
    }
    # Prometheus
    server {
        listen       80;
        server_name prom.monitoring.de-marauder.me;
            # ssl_certificate      /etc/nginx/certificate.pem;
            # ssl_certificate_key  /etc/nginx/certificate.key;
            # ssl_session_cache    shared:SSL:1m;
            # ssl_session_timeout  5m;
            # ssl_protocols        TLSv1.3;
            # ssl_prefer_server_ciphers   on;
        location / {
            set $upstream localhost:9090;
            # nginx will now start if host is not reachable
            fastcgi_pass    $upstream; 
            fastcgi_index   index.php;
            resolver 127.0.0.1 valid=30s;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_pass http://localhost:9090;
            auth_basic_user_file /etc/nginx/.htpasswd;
            auth_basic "Access restricted";
        }
    }
    # Loki
    server {
        listen       80;
        server_name loki.monitoring.de-marauder.me;
        # ssl_certificate      /etc/nginx/certificate.pem;
        # ssl_certificate_key  /etc/nginx/certificate.key;
        # ssl_session_cache    shared:SSL:1m;
        # ssl_session_timeout  5m;
        # ssl_protocols        TLSv1.3;
        # ssl_prefer_server_ciphers   on;
        location / {
            set $upstream localhost:3100;
            # nginx will now start if host is not reachable
            fastcgi_pass    $upstream; 
            fastcgi_index   index.php;
            resolver 127.0.0.1 valid=30s;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_pass http://localhost:3100;
            auth_basic_user_file /etc/nginx/.htpasswd;
            auth_basic "Access restricted";
        }
    }
    # Node exporter
    server {
        listen       80;
        server_name node.monitoring.de-marauder.me;
        # ssl_certificate      /etc/nginx/certificate.pem;
        # ssl_certificate_key  /etc/nginx/certificate.key;
        # ssl_session_cache    shared:SSL:1m;
        # ssl_session_timeout  5m;
        # ssl_protocols        TLSv1.3;
        # ssl_prefer_server_ciphers   on;
        location / {
            set $upstream localhost:9100;
            # nginx will now start if host is not reachable
            fastcgi_pass    $upstream; 
            fastcgi_index   index.php;
            resolver 127.0.0.1 valid=30s;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_pass http://localhost:9100;
            auth_basic_user_file /etc/nginx/.htpasswd;
            auth_basic "Access restricted";

        }
    }
    # Docker metrics server
    server {
        listen       9323;
        server_name docker.monitoring.de-marauder.me;
        # ssl_certificate      /etc/nginx/certificate.pem;
        # ssl_certificate_key  /etc/nginx/certificate.key;
        # ssl_session_cache    shared:SSL:1m;
        # ssl_session_timeout  5m;
        # ssl_protocols        TLSv1.3;
        # ssl_prefer_server_ciphers   on;
        location / {
            set $upstream localhost:9323;
            # nginx will now start if host is not reachable
            fastcgi_pass    $upstream; 
            fastcgi_index   index.php;
            resolver 127.0.0.1 valid=30s;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            # Scrape from the node
            proxy_pass http://localhost:9323;
            auth_basic_user_file /etc/nginx/.htpasswd;
            auth_basic "Access restricted";
        }
    }
    {% if ansible_architecture != "aarch64" %}
    # Cadvisor
    server {
        listen       9324;
        server_name cadvisor.monitoring.de-marauder.me;
        # ssl_certificate      /etc/nginx/certificate.pem;
        # ssl_certificate_key  /etc/nginx/certificate.key;
        # ssl_session_cache    shared:SSL:1m;
        # ssl_session_timeout  5m;
        # ssl_protocols        TLSv1.3;
        # ssl_prefer_server_ciphers   on;
        location / {
            set $upstream localhost:9324;
            # nginx will now start if host is not reachable
            fastcgi_pass    $upstream; 
            fastcgi_index   index.php;
            resolver 127.0.0.1 valid=30s;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_pass http://localhost:9324;
            auth_basic_user_file /etc/nginx/.htpasswd;
            auth_basic "Access restricted";
        }
    }
    {% endif %}
}